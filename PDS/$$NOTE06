Subject:  CBT Tape file 542 SWAREQ correction suggestion -
          and - Thanks
From:     "George.Pavlik@harlandclarke.com"
          <George.Pavlik@harlandclarke.com>
Date:     12/19/2018, 12:46 PM
To:       "sbgolob@cbttape.org" <sbgolob@cbttape.org>,
          "sknutson@cbttape.org" <sknutson@cbttape.org>

Hi Sam G., and Sam K.,

I wanted to first thank you both for your work on the CBT tape
over the many years it was been around.   I know the support you
provided, was or is not your primary job role, but have
appreciated the articles and source or techniques over the years
(I can remember back to around the late 1980's, anyway).

Hey, I just wanted to let you know I was in my current account
and the prior Sysprog implemented a one-off of some source of
FILE 542 on the CBT tape. I wanted to make sure you all were
aware so you could place a copy of the SWAREQ22 source located in
FILE 183 also in FILE 542.   The CSICODE Rexx code on FILE 542
also uses SWAREQ, and I am just trying to help anyone else that
may be using this source and has not migrated it to the SWAREQ22
version.

Below is some history on how I stumbled upon this, and I also
provided a shout out to Mark Zelden, who directed me to FILE
183.   I found the SWAREQ22 source last updated by Sam G.
Thanks (and thanks for documenting it to make it easy to
follow), and modified it to work with the CSICODE implemented by
the previous Sysprog.

Let me know if you have any questions. The block of source I
implemented is below the History area.

Merry Christmas, and safe holidays.
Regards,
George Pavlik

Infrastructure Systems Engineer IV
Harland Clarke Holdings
15955 La Cantera Parkway | San Antonio, TX 78256
Office: 210.694-1123 | Mobile: 210.385-2745
George.Pavlik@harlandclarke.com

History

Brief summary of my exchange with Mark Z. around 11/20/2018

Well back in 2003-2004 time frame a previous sysprog implemented
something at this shop related to Catalog Search Interface tool.
After doing some digging, I realize the code they implemented was
from the CBT tape file 542 called CSICODE.  Well this code
recently broke and it is related to the SWAREQ subroutine in the
CSICODE Rexx routine.

So, I've been at this shop about 2 years, and our current lead
zOS sysprog just migrated us from zOS 2.1 to zOS 2.3.  The batch
job process utilizing this code broke, and after reviewing the
many Rexx routines involved, I narrowed the issue down to how
this routine was generating the address return via the SWAREQ
subroutine (basically relating to the SWA address).  After
consulting with IBM they confirmed the SWA references were move
above the BAR in zOS 2.2. Thus, I have a confirmation on the
issue.

BTW, thanks for the tip on CBT file 183, I actually found a
work-around in the PDS, member SWAREQ22, reviewed and updated to
work with zOS 2.2 and above.  So, it is good to know I was not
the first to hit this issue. I had to re-work the SWAREQ22
routine to fit the CSICODE in file 542 (still a work in progress
for our invocation).  When I am done, I'll send my changes to
Sam and let him make them better.

Source Subroutine I implemented in HCHC CSICODE2 (aka CSICODE)

**note** previous sysprog took CSICODE, and split it up to be a
CSICODE1 and CSICODE2 routines at our company.Â  Of cource none
of it was documented, thus debugging can be tedious, given the
only comments were those of the original Author, Alastair Gray.

Below, is the section I implemented.  I am sure you Sam G. can
make it better to fit within the member CSICODE, or, simply just
place a copy of SWAREQ22 routine on FILE 183 in this CBT file,
542, and advise others to review, change, and use as they see
fit.


/**********************************************************************/
/* Notes about this exec:     FILE542.PDS(CSICODE)                    */
/* -Added by G.Pavlik, Nov. 21, 2018                                  */
/* -This code is the second part of CSICODE1 located in this PDS      */
/*  (P.SY.DR.EXEC). The original exec, as noted in CSICODE1, was      */
/*  taken from CBT FILE542. Some comments have been included below    */
/*  in order to provide some history as to where this source was      */
/*  taken from, who wrote it, and what updates have been made.        */
/*  -Comments from original author - originally written circa 2004    */
/*    CSICODE : Uses Catalog Search Interface (CSI)                   */
/*    Author : Alastair Gray - a_j_gray@hotmail.com                   */
/*             (or the e-mail I use to post on TSO-REXX/IBM-MAIN)     */
/*    This was an extension of previous work that was initially       */
/*    derived from the code found in 'SYS1.SAMPLIB(IGGCSIRX)'         */
/*                                                                    */
/* HCHC Comment Block:                                                */
/* -------------------                                                */
/* Purpose: This section of code does several things. It negotiates   */
/*          the zOS control blocks to obtain the current DDName and   */
/*          DSNs associated to the DDName so that it can dynamically  */
/*          allocate them in order to populate them, or place members */
/*          in them in the case of a PDS - members ERROR, REPORT,     */
/*          with the information obtained via a call to a IBM module  */
/*          called IGGCSI00 (catalog search - see DFSMS Managing      */
/*          Catalogs manual for info).                                */
/*                                                                    */
/*          Thus, once the proper CATALOG and LEVEL information has   */
/*          been entered (in this case, resides in a different        */
/*          member), the CSI parameter list is built, the call made   */
/*          and the data returned, analyzed, and populated into the   */
/*          appropriate file.                                         */
/*                                                                    */
/* Special Notes:                                                     */
/* --------------                                                     */
/*         This code was altered in Nov. 2018 because the batch job   */
/*         PSYSBK03 abended with a:                                   */
/*          IEC141I 013-18,IGG0191B,PSYSBK03,RUNEXEC2,INPUT,A670,     */
/*                         PPR05E,P.SY.DR.CLK2.REPORT(REPORT)         */
/*         After some analysis by me, G.Pavlik, I was able to         */
/*         determine the issue was in this code, specfically in the   */
/*         SWAREQ subroutine. The routine no longer worked, because   */
/*         when HCHC upgraded from zOS 2.1 to zOS 2.3, IBM had moved  */
/*         the SWA, and SVA (SWA virtual Address) to above the BAR    */
/*         (a 2GB line in storage). Reviewing Data Area manuals       */
/*         confirmed the routine would need to be reworked. On a      */
/*         chance this may have already been corrected, I downloaded  */
/*         the CBT FILE542, it has not been updated, and so I pinged  */
/*         Mark Zelden, and Sam Golob who have written many articles  */
/*         and items for CBT. Mark pointed me to FILE 183, which had  */
/*         contained a revised SWAREQ22 written by Don Poitras of the */
/*         SAS institute. The version enabled below had to be         */
/*         modified to work with this CSICODE (CSICODE2)              */
/*         implementation.                                            */
/* Update Activity:                                                   */
/* ----------------                                                   */
/* 11-21-18 GEOP-Added "Notes about this exec", "HCHC Comment Block", */
/*               "Special Notes", "Tracing", and this area,           */
/*               "Update Activity".                                   */
/*              -Replaced (commented) original SWAREQ routine written */
/*               circa 2004, with a version obtained from CBT FILE    */
/*               183 written circa Nov.2015, and then modified the    */
/*               routine to work with the original CSICODE.           */
/*               -Note, to enable tracing, you must enable in this    */
/*                     code, and CSICODE1.                            */
/*               I added to the original comments from the new        */
/*               FILE 183 routine.                                    */
/*              -Changes to the replaced SWAREQ routine are indicated */
/*               via the 'v01' or 'v02' off to the right.             */

CSICODE stuff

/**********************************************************************/
/* Common procedures                                                  */
/**********************************************************************/
/* begin comment block ...
\*--------------------------------------------------------------------*/
|* MODULE NAME = SWAREQ                                               *|
|*                                                                    *|
|* DESCRIPTIVE NAME = Convert an SVA to a 31-bit address              *|
|*                                                                    *|
|* STATUS = R200                                                      *|
|*                                                                    *|
|* FUNCTION = The SWAREQ function simulates the SWAREQ macro to       *|
|*            convert an SWA Virtual Address (SVA) to a full 31-bit   *|
|*            address which can be used to access SWA control blocks  *|
|*            in the SWA=ABOVE environment.  The input is a 3-byte    *|
|*            SVA; the output value is a 10-digit decimal number.     *|
|*                                                                    *|
|* AUTHOR   =  Gilbert Saint-Flour <gsf@pobox.com>                    *|
|*                                                                    *|
|* DEPENDENCIES = TSO/E V2                                            *|
|*                                                                    *|
|* SYNTAX   =  SWAREQ(sva)                                            *|
|*                                                                    *|
|*             sva must contain a 3-byte SVA.                         *|
|*                                                                    *|
|* ****************************************************************** *|
|* Update Activity (HCHC):                                            *|
|* -----------------------                                            *|
|* 11-20-18 GEOP -Routine take from CBT file 183 member SWAREA22 and  *|
|*                modified to work within this CSICODE2 member. My    *|
|*                changes identified by V01 or V02 in this section.   *|
|*                The SWAREQ22 routine was modified to handle the     *|
|*                change introduced by IBM to move the SWA above      *|
|*                the BAR.                                            *|
|*                                                                    *|
|* ****************************************************************** *|
|* Sample Invocation: SWA=BELOW -below line, above line, not above BAR*|
|*                                                                    *|
|*    NUMERIC DIGITS 10                                               *|
|*    tcb = C2D(STORAGE(21C,4))         /* TCB          PSATOLD  */   *|
|*    tiot= C2D(STORAGE(D2X(tcb+12),4)) /* TIOT         TCBTIO   */   *|
|*    sva = STORAGE(D2X(tiot+36),3)     /* First JFCB   TIOEJFCB */   *|
|*    jfcb=SWAREQ(sva)             /* convert SVA to 31-bit addr */   *|
|*    dsn=STORAGE(D2X(jfcb),44)         /* dsname       JFCBDSNM */   *|
|*    vol=STORAGE(D2X(jfcb+118),6)      /* volser       JFCBVOLS */   *|
|*    SAY 'sva='C2X(sva) 'jfcb='D2X(jfcb) 'dsn='dsn 'vol='vol         *|
|*                                                                    *|
\*--------------------------------------------------------------------*/
/*SWAREQ: PROCEDURE */
SWAREQ:                                     /* SWAREQ Procedure     ::*/
 /*Digits()                      tracing 2 see current Digit value v02*/
NUMERIC DIGITS 20                           /* allow up to 2**64      */
sva=C2D(ARG(1))                             /* convert to decimal     */
tcb = C2D(STORAGE(21C,4))                   /* TCB         PSATOLD    */
jscb = C2D(STORAGE(D2X(tcb+180),4))         /* JSCB        TCBJSCB    */
qmpl = C2D(STORAGE(D2X(jscb+244),4))        /* QMPL        JSCBQMPI   */
/**********************************************************************/
/* See if qmat can be above the bar                                   */
/**********************************************************************/
qmsta= C2X(STORAGE(D2X(qmpl+16),1))         /* JOB STATUS BYTE        */
If Substr(X2B(qmsta),6,1) Then              /* is QMQMAT64 bit on?    */
Do                                          /* yes, qmat can be ATB   */
  If Right(X2B(C2X(ARG(1))),1) \= '1' Then  /* SWA=BELOW ?            */
    Return D2C(C2D(ARG(1))+16)              /* yes, return sva+16  v02*/
  /*RETURN C2D(ARG(1))+16                      yes, return sva+16  v01*/
  qmat=C2D(STORAGE(D2X(qmpl+10),2))*(2**48) +, /* QMAT+0  QMADD01     */
       C2D(STORAGE(D2X(qmpl+18),2))*(2**32) +, /* QMAT+2  QMADD23     */
       C2D(STORAGE(D2X(qmpl+24),4))            /* QMAT+4  QMADD       */
  Return D2C(C2D(STORAGE(D2X(qmat+(sva*12)+64),4))+16)
  /*RETURN C2D(STORAGE(D2X(qmat+(sva*12)+64),4))+16                v01*/
End
Else
Do                                          /* no, qmat is BTB        */
  If Right(C2X(ARG(1)),1) \= 'F' Then       /* SWA=BELOW ?            */
    Return D2C(C2D(ARG(1))+16)              /* yes, return sva+16  v02*/
  /*RETURN C2D(ARG(1))+16                      yes, return sva+16  v01*/
  qmat = C2D(STORAGE(D2X(qmpl+24),4))       /* QMAT       QMADD       */
  Do While sva>65536
    qmat = C2D(STORAGE(D2X(qmat+12),4))     /* next QMAT  QMAT+12     */
    sva=sva-65536                           /* 010006F -> 000006F     */
  End
 /* ***************************************************************** */
 /* 11-19-18 Moved RETURN to below area to make function follow    v02*/
 /*          expected exec routine coding and calling guidelines.  v02*/
 /* RETURN C2D(STORAGE(D2X(qmat+sva+1),4))+16                      v01*/
End
Return D2C(C2D(STORAGE(D2X(qmat+sva+1),4))+16)  /* return address  v02*/
/* RETURN C2D(STORAGE(D2X(qmat+sva+1),4))+16                       v02*/
/* ****************************************************************** */
/* 11-20-2018                                                         */
/* Old SWAREQ routine below ... (original CSICODE2)                   */
/* Below routine works for SWA=BELOW, or, zOS 2.1 and lower where     */
/* SWA reside below the BAR, and/or below the line, above the line.   */
/* ****************************************************************** */
/* SWAREQ:                                     SWAREQ Procedure     ::*/
/* Digits()                          tracing 2 see current Digit value*/
/* If (Right(C2x(Arg(1)),1) \= 'F') Then       SWA=BELOW ?            */
/*  Return D2c(C2d(Arg(1))+16)                 yes, return sva+16     */
/*                                             10 digits for 7FFFFFFF */
/* Numeric Digits 20                           allow up to 2GB        */
/* sva  = C2d(Arg(1))                          convert to decimal     */
/* tcb  = C2d(Storage(21C,4))                  TCB         PSATOLD    */
/* jscb = C2d(Storage(D2x(tcb+180),4))         JSCB        TCBJSCB    */
/* qmpl = C2d(Storage(D2x(jscb+244),4))        QMPL        JSCBQMPI   */
/* qmat = C2d(Storage(D2x(qmpl+24),4))         QMAT        QMADD      */
/* Do While sva > 65536                                               */
/*  qmat = C2d(Storage(D2x(qmat+12),4))        next QMAT     QMAT+12  */
/*  sva=sva-65536                              010006F -> 000006F     */
/* End                                                                */
/* Return D2c(C2d(Storage(D2x(qmat+sva+1),4))+16)    return address   */
/**********************************************************************/
