/* REXX - MAKEINDX : Create a $$$INDEX from standardised comments     */
/**********************************************************************/
/* MAKEINDX :                                                         */
/* Creates an $$$INDEX member for an EXEC library based on a standard */
/* comment structure - shown at the top of this member.               */
/**********************************************************************/
/* Author : Alastair Gray - a_j_gray@hotmail.com                      */
/*                 (or the e-mail I use to post on TSO-REXX/IBM-MAIN) */
/**********************************************************************/
/* Changes :                                                          */
/* 1.0.0   - 17/01/1997 - Alastair Gray - Original version            */
/* 1.0.1   - 25/02/2000 - Alastair Gray - Added DESC:                 */
/* 1.0.2   - 25/02/2000 - Alastair Gray - Simplified code             */
/* 1.0.3   - 28/02/2000 - Alastair Gray - Changed $$$INDEX comment    */
/* 1.0.4   - 28/04/2000 - Alastair Gray - Added type TEXT             */
/* 1.0.5   - 16/08/2000 - Alastair Gray - Added type DTL              */
/* 1.0.6   - 14/03/2001 - Alastair Gray - Added type ASM and PARM     */
/**********************************************************************/
Arg dsn                                     /*                        */
dsn = Strip(dsn,B,"'")                      /* remove inverted commas */
If (dsn = 'DSN') |,                         /*                        */
   (dsn = '') then                          /*                        */
 Exit 12                                    /*                        */
Trace O                                     /*                        */
X = Msg('OFF')                              /*                        */
/**********************************************************************/
olin.1 = 'Member   Description'             /* Set Index header       */
olin.2 = '-------- -----------'             /*                        */
ocnt = 2                                    /* Set Output line count  */
/**********************************************************************/
X = Outtrap('MEM.')                         /*                        */
"LISTDS '"dsn"' MEMBERS"                    /* List members in dataset*/
X = Outtrap()                               /*                        */
flag = 'NEXT'                               /*                        */
If (mem.0 > 6) Then                         /* process only if members*/
 Do                                         /*                        */
  Do meml = 1 to mem.0                      /*  loop thru member list */
   If (Substr(mem.meml,1,11) = '--MEMBERS--') Then
    Do                                      /*                        */
     flag = 'OK'                            /*                        */
     Iterate                                /*                        */
    End                                     /*                        */
   If (flag = 'NEXT') then                  /*                        */
    Iterate                                 /*                        */
   memname = Strip(mem.meml,B)              /*  remove blanks         */
   outmem  = Left(memname,9)                /*  pad for output        */
   If (Substr(memname,1,8) = 'THE FOLL') Then /* check for bad aliass */
    Leave                                   /*                        */
   Address TSO "ALLOC FI(MEMIN) DA('"dsn"("memname")') SHR REU"
   Address TSO "EXECIO * DISKR MEMIN (FINIS STEM LINE.)"
   Address TSO "FREE FI(MEMIN)"
/**********************************************************************/
   check1 = Word(line.1,2)                  /* check type 1           */
   check2 = Word(line.1,1)                  /* check type 2           */
   check3 = Substr(line.1,1,2)              /* check type 3           */
   Upper check1                             /* put check1 upper case  */
   Upper check2                             /* put check2 upper case  */
   Upper check3                             /* put check3 upper case  */
   Select                                   /*                        */
    When (check1 = 'JOB')    Then type = 'JOB'
    When (check1 = 'DTL')    Then type = 'DTL'
    When (check2 = '<:--')   Then type = 'DTL'
    When (check3 = '<!')     Then type = 'DTL'
    When (check1 = 'PROC')   Then type = 'PROC'
    When (check2 = ')PANEL') Then type = 'PANEL'
    When (check2 = ')ATTR')  Then type = 'PANEL'
    When (check2 = 'PROC')   Then type = 'CLIST'
    When (check1 = 'REXX')   Then type = 'REXX'
    When (check1 = 'SAS')    Then type = 'SAS'
    When (check1 = 'SKEL')   Then type = 'SKEL'
    When (check1 = 'MSG')    Then type = 'MSG'
    When (check1 = 'TEXT')   Then type = 'TEXT'
    When (check1 = 'PARM')   Then type = 'PARM'
    When (check1 = 'ASM')    Then type = 'ASM'
    Otherwise type = ''                     /*                        */
   End                                      /*                        */
   comment = ''                             /*                        */
   If (type /= '') Then                     /*                        */
    Do                                      /*                        */
     Call MEMSCAN                           /*                        */
     If (type = 'JOB') &,                   /*                        */
        (comment = '') Then                 /*                        */
      Do                                    /*                        */
       type = 'DOC'                         /*                        */
       Call MEMSCAN                         /*                        */
       If (comment = '') Then               /*                        */
        Do                                  /*                        */
         type = 'DESC'                      /*                        */
         Call MEMSCAN                       /*                        */
        End                                 /*                        */
       type = 'JOB'                         /*                        */
      End                                   /*                        */
    End                                     /*                        */
   If (type = 'DTL') Then                   /*                        */
    Do                                      /*                        */
     colon_pos = Index(comment,":")         /*                        */
     If (Word(comment,1) = 'DTL') &,        /*                        */
        (colon_pos > 1) Then                /*                        */
      Do                                    /*                        */
       comment = Substr(comment,colon_pos+1)/*                        */
       Call COMCLEAN                        /*                        */
       output = outmem||comment             /*                        */
      End                                   /*                        */
     If (comment = '') Then                 /*                        */
      Do                                    /*                        */
       type = 'DOC'                         /*                        */
       Call MEMSCAN                         /*                        */
       type = 'DTL'                         /*                        */
      End                                   /*                        */
    End                                     /*                        */
   If (type = '') Then                      /*                        */
    If (Index(line.1,'REXX') > 0) Then      /*                        */
     type = 'REXX'                          /*                        */
   If (comment = '') Then                   /*                        */
    output = outmem||'** Unknown 'type      /*                        */
   If (memname = '$$$INDEX') Then           /*                        */
    output = outmem||'This member - generated by MAKEINDX' /*         */
   If (memname = '$$$COIBM') Then           /*                        */
    output = outmem||'IBM IPOUPDTE check member' /*                   */
   ocnt = ocnt + 1                          /*                        */
   olin.ocnt = output                       /*                        */
  End                                       /*                        */
 End                                        /*                        */
Address TSO "ALLOC FI(INDOT) DA('"dsn"($$$INDEX)') SHR REU"
Address TSO "EXECIO "ocnt" DISKW INDOT (FINIS STEM OLIN.)"
Address TSO "FREE FI(INDOT)"
Exit 0                                      /*                        */
/**********************************************************************/
MEMSCAN:                                    /*                        */
typel = Length(type)                        /*                        */
Do loop = 1 to line.0                       /*                        */
 test = line.loop                           /*                        */
 Upper test                                 /*                        */
 If (Substr(Word(test,2),1,typel) = type) Then /*                     */
  Do                                        /*                        */
   colon_pos = Index(line.loop,":")         /*                        */
   If (colon_pos > 0) Then                  /*                        */
    Do                                      /*                        */
     comment = Substr(line.loop,colon_pos+1,71-colon_pos) /*          */
     Call COMCLEAN                          /*                        */
     output = outmem||comment               /*                        */
     Leave                                  /*                        */
    End                                     /*                        */
  End                                       /*                        */
End                                         /*                        */
Return                                      /*                        */
/**********************************************************************/
COMCLEAN:                                   /*                        */
comment = Strip(comment,B,' ')              /*                        */
comment = Strip(comment,B,'>')              /*                        */
comment = Strip(comment,B,'-')              /*                        */
comment = Strip(comment,B,'/')              /*                        */
comment = Strip(comment,B,'*')              /*                        */
comment = Strip(comment,B,' ')              /*                        */
Return                                      /*                        */
